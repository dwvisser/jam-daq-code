<?xml version="1.0" encoding="UTF-8"?>
<project name="Jam Project" default="x-platform">

    <property name="base.dir" value="." />
    <property name="build.dir" value="${user.home}/jambuild" />
    <property name="copy.dir" value="${build.dir}/copy" />
    <property name="release.dir" value="${build.dir}/release" />
	<property name="reports.dir" value="${build.dir}/reports" />
	<property name="ndoc.dir" value="${build.dir}/ndoclet" />
    <property name="APIbase.dir" value="${build.dir}/APItemp" />
    <property name="API.dir" value="${APIbase.dir}/help/API" />
	<property name="Webstart.dir" value="${build.dir}/webstart" />
	<property name = "windows" value = "${build.dir}/windows/jam-daq" />
	<property name = "winbin" value="${windows}/bin" />
	<property name = "winlib" value="${windows}/lib" />
	<property name = "MAJOR" value="2" />
	<property name = "MINOR" value="5" />
	<property name = "RELEASE" value="0" />
	<property name = "java.latest" value = "1.6.0_07" />
	<property name = "jam.version" value = "${MAJOR}.${MINOR}.${RELEASE}" />
	<property name="jam.jar" value="jam-${jam.version}.jar" />
	<property name="fulljam.jar" value="${build.dir}/${jam.jar}" />
	<property name="testjam.jar" value="jamtests-${jam.version}.jar" />
	<property name="fulltestjam.jar" value="${build.dir}/${testjam.jar}" />
	<property name="src.zip" value="jam-${jam.version}-src.zip"/>
	<property name="fullsrc.zip" value="${build.dir}/${src.zip}"/>
	<property name="jam.zip" value="jam-${jam.version}.zip" />
	<!-- original property values for reference. From now on we will use a modified version
	     of these that incorporates the Jam Version.
	<property name = "SOURCE_GUID" value="858b9da7-5471-4c5e-bc12-15ad987aebdc" />
	<property name = "LIB_GUID" value="e7c01541-daf8-4198-b56f-6d0cdccc7bd7" />
	<property name = "BIN_GUID" value="f9ed19ba-bc1c-4dda-9855-7d30176f118f" />
	-->
	<property name = "SOURCE_GUID" value="858b9da7-5471-4c5e-bc12-15ad987a${MAJOR}${MINOR}${RELEASE}" />
	<property name = "LIB_GUID"    value="e7c01541-daf8-4198-b56f-6d0cdccc${MAJOR}${MINOR}${RELEASE}" />
	<property name = "BIN_GUID"    value="f9ed19ba-bc1c-4dda-9855-7d30176f${MAJOR}${MINOR}${RELEASE}" />
	<property name = "keyPassword" value="s4b14xto" />
    
	<!-- task definition for windows executable builder -->
	<taskdef name="jsmoothgen"
    	classname="net.charabia.jsmoothgen.ant.JSmoothGen"
     	classpath="WINpackage/jsmoothgen-ant.jar"/>
	
	<!-- task definition for ant.net library, used to call into
	     Wix candle and light, but has other capabilities as well -->
	<taskdef 
	    resource="org/apache/ant/dotnet/antlib.xml"
	    classpath="WINpackage/ant-dotnet-1.0.jar"/>
	
    <target name="clean">
    	<delete >
    		<fileset
    			dir="${base.dir}"
    			includes="**\*.bak"
    		/>
    		</delete>
    		<delete dir="${build.dir}" />
    </target>

    <target name="prepare" depends="clean">
        <mkdir dir="${API.dir}" />
        <mkdir dir="${winbin}" />
        <mkdir dir="${winlib}" />
        <mkdir dir="${copy.dir}" />
    </target>
    
	<target name="buildonlyglobal" depends="prepare">
		<copy todir="${copy.dir}">
			<fileset dir="${base.dir}"
			includes="jam/global/*.java,jam/global/*.html"/>
			<filterset>
    			<filter token="MAJOR" value="${MAJOR}" />
    			<filter token="MINOR" value="${MINOR}" />
    			<filter token="RELEASE" value="${RELEASE}" />
            	<filter token="PRODUCT_GUID" value="${PRODUCT_GUID}" />
            	<filter token="PACKAGE_GUID" value="${PACKAGE_GUID}" />
            	<filter token="SOURCE_GUID" value="${SOURCE_GUID}" />
                <filter token="LIB_GUID" value="${LIB_GUID}" />
                <filter token="BIN_GUID" value="${BIN_GUID}" />
            </filterset>
		</copy>
	   	<javac source="1.6" target="1.6" srcdir="${copy.dir}" destdir="${copy.dir}">
	    	<compilerarg value="-Xlint:unchecked" />
	    	<classpath>
	    		<pathelement location="${copy.dir}" />
	    	</classpath>
	    </javac>
        <jar jarfile="${build.dir}/jam.global-${MAJOR}.${MINOR}.${RELEASE}.jar"
            basedir="${copy.dir}"
            includes="jam/global/*.html,jam/global/*.class"
        />    
	</target>
	
    <target name="copy" depends="prepare">
    	<copy todir="${copy.dir}">
    		<fileset dir="${base.dir}" 
    		includes="**/*.java,**/*.html,README.md,LICENSE, **/*.jnlp, **/*.jsmooth, **/*.wxs, **/*.hs, **/*.css, **/*.jhm, **/*.xml, **/*.ini" />
            <filterset>
    			<filter token="MAJOR" value="${MAJOR}" />
    			<filter token="MINOR" value="${MINOR}" />
    			<filter token="RELEASE" value="${RELEASE}" />
             	<filter token="SOURCE_GUID" value="${SOURCE_GUID}" />
                <filter token="LIB_GUID" value="${LIB_GUID}" />
                <filter token="BIN_GUID" value="${BIN_GUID}" />
            </filterset>
		</copy>
		<copy todir="${copy.dir}">
			<fileset dir="${base.dir}"
			includes="**/*.png,**/*.jar, **/*.evn, **/*.hdf" />
		</copy>    		
        <copy todir="${build.dir}" flatten="true" >
            <fileset dir = "${copy.dir}"
                includes="README.md,LICENSE,*.html,help/config/*.ini" >
            </fileset>
        </copy>
        <copy todir="${build.dir}" flatten="true" >
            <fileset dir = "${copy.dir}"
                includes="README.md,LICENSE,*.html,help/config/*.ini" >
            </fileset>
        </copy>
    </target>    

	<target name="srczip" depends="copy">
        <zip zipfile="${fullsrc.zip}"
            basedir="${copy.dir}"
            includes="jam\**\*.java,jam\**\*.png,jam\**\*.gif,README.md,LICENSE,jam/**/*.html,help\**\*,sampledata\**\*,test\**\*,injection\**\*"
        />    
    </target>
       
    <target name="compile" depends="copy">
        <javac source="1.8" target="1.8" includeantruntime="false" srcdir="${copy.dir}" destdir="${copy.dir}">
    		<compilerarg value="-Xlint:unchecked" />
    		<classpath>
    			<pathelement location="${copy.dir}" />
    			<pathelement location="${copy.dir}/jh.jar" />
    			<pathelement location="${copy.dir}/junit-4.3.1.jar" />
    			<pathelement location="${copy.dir}/guice-3.0.jar"/>
    			<pathelement location="${copy.dir}/javax.inject.jar"/>
    		</classpath>
    	</javac>
    </target> 	

    <target name="jar" depends="compile">
    	<copy todir="${APIbase.dir}">
    		<fileset dir = "${copy.dir}" includes = "help/**/*" />
    	</copy>
        <jar destfile="${fulljam.jar}">
        	<fileset dir="${copy.dir}"
                     excludes="*.html,**/*/*.db,*.jnlp,*.xml,*.jardesc,*.jar,help,help/**/*,test,test/**/*,WINpackage,WINpackage/*,jam\**\*.java,jam\**\*.chk,jam\**\*.bak,.classpath,.project,classes/**/*,sampledata/*"
        	/>
            <fileset dir="${APIbase.dir}"
                     includes="help/**/*"
            />    
        </jar>  
    	<jar destfile="${fulltestjam.jar}">
    		<fileset dir="${copy.dir}" includes="test,test/**/*" />
    	</jar>
    	<delete dir="${APIbase.dir}" />
    </target>

	<target name="unittest" description="Execute unit tests" depends="compile">
    	<mkdir dir="${reports.dir}" />
		<junit printsummary="yes" haltonfailure="yes" showoutput="yes" > 
		    <classpath> 
    			<pathelement location="${copy.dir}/jh.jar" />
    			<pathelement location="${copy.dir}/aopalliance.jar" />
    			<pathelement location="${copy.dir}/guice-3.0.jar"/>
		    	<pathelement location="${copy.dir}/junit-4.3.1.jar"/>
    			<pathelement location="${copy.dir}/javax.inject.jar"/>
		    	<pathelement location="${copy.dir}" />
		    </classpath>                    
			<batchtest fork="yes" todir="${reports.dir}"> 
		       <formatter type="xml"/> 
		       <fileset dir="${copy.dir}"> 
		          <include name="**/AllTests.java"/> 
		       </fileset> 
		    </batchtest> 
		</junit> 
		<junitreport todir="${reports.dir}">
		    <fileset dir="${reports.dir}">
		        <include name="TEST-*.xml" />
		    </fileset>
		    <report todir="${reports.dir}" />
		</junitreport>
	  </target>
		
	<target name="webstart" depends="jar">
		<copy file="${copy.dir}/classes/jam/nukeicon.png" todir="${Webstart.dir}" />
		<copy file="${copy.dir}/jam.jnlp" todir="${Webstart.dir}" />
		<copy file="${build.dir}/Jam.jar" todir="${Webstart.dir}" />
		<signjar jar="${Webstart.dir}/Jam.jar" alias="dale" 
			storepass="${keyPassword}" />
		<copy file="${build.dir}/JamHelp.jar" todir="${Webstart.dir}" />
		<signjar jar="${Webstart.dir}/JamHelp.jar" alias="dale" 
			storepass="${keyPassword}" />
		<copy todir="${Webstart.dir}" file="${copy.dir}/jh.jar"/>
		<signjar jar="${Webstart.dir}/jh.jar" alias="dale" 
			storepass="${keyPassword}" />
	</target>

   	<target name="x-platform" depends="jar,srczip" description="Create and populate x-platform release folder.">
   		<copy todir="${release.dir}">
    	 	<fileset dir="${build.dir}" includes="${jam.jar}" />
    	 	<fileset dir="${build.dir}" includes="${src.zip}" />
    	 	<fileset dir="${copy.dir}" includes="jh.jar" />
    	 	<fileset dir="${copy.dir}" includes="guice-3.0.jar" />
    	 	<fileset dir="${copy.dir}" includes="aopalliance.jar" />
    		<fileset dir="${copy.dir}" includes="javax.inject.jar" />
   		</copy>
  		<copy todir="${release.dir}">
  			<fileset dir="${base.dir}/launch" includes="jam.*" />
            <filterset>
    			<filter token="jam.jar" value="${jam.jar}" />
    			<filter token="java.latest" value="${java.latest}" />
           	</filterset>
  		</copy>
  		<copy todir="${release.dir}">
  			<fileset dir="${base.dir}" includes="README.md,LICENSE" />
  		</copy>
        <zip 
        	zipfile="${release.dir}/${jam.zip}" 
        	basedir="${release.dir}" 
        	includes="*.jar,jam.*,README.md,LICENSE"
        />    
 	</target>
	
    <target name="windows" depends="x-platform" description="Make Windows executables">
    	<copy todir="${winlib}">
    	 	<fileset dir="${build.dir}" includes="${jam.jar}" />
    	 	<fileset dir="${copy.dir}" includes="jh.jar" />
    	 	<fileset dir="${copy.dir}" includes="guice-3.0.jar" />
    		<fileset dir="${copy.dir}" includes="javax.inject.jar" />
    	 	<fileset dir="${copy.dir}" includes="aopalliance.jar" />
    	</copy>
    	<copy todir="${windows}" file="${fullsrc.zip}" />
    	<!-- copy build.jsmooth using filtering to get the Jam jar file name right -->
    	<copy todir="${windows}" flatten="true">
    		<fileset dir="${copy.dir}/WINpackage" includes="build.jsmooth" />
            <filterset>
     			<filter token="MAJOR" value="${MAJOR}" />
     			<filter token="MINOR" value="${MINOR}" />
     			<filter token="RELEASE" value="${RELEASE}" />
            </filterset>
    	</copy>
    	<!-- copy the rest besides build.jsmooth without filtering -->
      	<copy todir="${windows}" flatten="true">
        		<fileset dir="${copy.dir}/WINpackage" excludes="build.jsmooth" />
        </copy>
    	<jsmoothgen project="${windows}/build.jsmooth" 
      		skeletonroot="C:\\Program Files (x86)\\JSmooth 0.9.9-7\\skeletons"/>
    	<wix mode="candle" source="${windows}\installer.wxs" />
    	<move file="./installer.wixobj" todir="${windows}" />
    	<wix mode="light" source="${windows}/installer.wixobj" target="Jam ${MAJOR}.${MINOR}.${RELEASE}.msi" />
    	<delete file="./installer.wixobj" />
    	<move file="./Jam ${MAJOR}.${MINOR}.${RELEASE}.msi" todir="${windows}" />
    </target>
    
    <target name="all" depends="unittest,windows" />
        
</project>
