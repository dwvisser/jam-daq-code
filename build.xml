<?xml version="1.0" encoding="UTF-8"?>
<project name="Jam Project" default="x-platform">

    <property name="base.dir" value="." />
    <property name="build.dir" value="${user.home}/jambuild" />
    <property name="copy.dir" value="${build.dir}/copy" />
    <property name="release.dir" value="${build.dir}/release" />
	<property name="reports.dir" value="${build.dir}/reports" />
	<property name="ndoc.dir" value="${build.dir}/ndoclet" />
    <property name="APIbase.dir" value="${build.dir}/javadocs" />
    <property name="API.dir" value="${APIbase.dir}/API" />
	<property name="Webstart.dir" value="${build.dir}/webstart" />
	<property name = "MAJOR" value="3" />
	<property name = "MINOR" value="0" />
	<property name = "RELEASE" value="0" />
	<property name = "java.source" value="1.8" />
	<property name = "java.target" value="${java.source}" />
	<property name = "java.latest" value = "1.8.0_191" />
	<property name = "jam.version" value = "${MAJOR}.${MINOR}.${RELEASE}" />
	<property name="jam.jar" value="jam-${jam.version}.jar" />
	<property name="fulljam.jar" value="${build.dir}/${jam.jar}" />
	<property name="testjam.jar" value="jamtests-${jam.version}.jar" />
	<property name="fulltestjam.jar" value="${build.dir}/${testjam.jar}" />
	<property name="src.zip" value="jam-${jam.version}-src.zip"/>
	<property name="fullsrc.zip" value="${build.dir}/${src.zip}"/>
	<property name="jam.zip" value="jam-${jam.version}.zip" />
    
    <target name="clean">
    	<delete >
    		<fileset
    			dir="${base.dir}"
    			includes="**\*.bak"
    		/>
    		</delete>
    		<delete dir="${build.dir}" />
    </target>

    <target name="prepare" depends="clean">
        <mkdir dir="${API.dir}" />
        <mkdir dir="${winbin}" />
        <mkdir dir="${winlib}" />
    </target>

	<target name="buildonlyglobal" depends="prepare,copy">
		<copy todir="${copy.dir}">
			<fileset dir="${base.dir}"
			includes="jam/global/*.java,jam/global/*.html"/>
			<filterset>
    			<filter token="MAJOR" value="${MAJOR}" />
    			<filter token="MINOR" value="${MINOR}" />
    			<filter token="RELEASE" value="${RELEASE}" />
            	<filter token="PRODUCT_GUID" value="${PRODUCT_GUID}" />
            	<filter token="PACKAGE_GUID" value="${PACKAGE_GUID}" />
            	<filter token="SOURCE_GUID" value="${SOURCE_GUID}" />
                <filter token="LIB_GUID" value="${LIB_GUID}" />
                <filter token="BIN_GUID" value="${BIN_GUID}" />
            </filterset>
		</copy>
        <javac source="${java.source}" target="${java.target}" srcdir="${copy.dir}"
		    destdir="${copy.dir}">
	    	<compilerarg value="-Xlint:unchecked" />
	    	<classpath>
	    		<pathelement location="${copy.dir}" />
				<pathelement location="${copy.dir}/jh.jar" />
				<pathelement location="${copy.dir}/junit-4.3.1.jar" />
                <pathelement location="${copy.dir}/guice-3.0.jar" />
				<pathelement location="${copy.dir}/javax.inject.jar" />
	    	</classpath>
	    </javac>
        <jar jarfile="${build.dir}/jam.global-${MAJOR}.${MINOR}.${RELEASE}.jar"
            basedir="${copy.dir}"
            includes="jam/global/*.html,jam/global/*.class"
        />    
	</target>
	
    <target name="copy" depends="prepare">
    	<copy todir="${copy.dir}">
    		<fileset dir="${base.dir}" 
    		includes="**/*.java,**/*.html,README.md,LICENSE, **/*.jnlp, **/*.jsmooth, **/*.wxs, **/*.hs, **/*.css, **/*.jhm, **/*.xml, **/*.ini" />
            <filterset>
    			<filter token="MAJOR" value="${MAJOR}" />
    			<filter token="MINOR" value="${MINOR}" />
    			<filter token="RELEASE" value="${RELEASE}" />
             	<filter token="SOURCE_GUID" value="${SOURCE_GUID}" />
                <filter token="LIB_GUID" value="${LIB_GUID}" />
                <filter token="BIN_GUID" value="${BIN_GUID}" />
            </filterset>
		</copy>
		<copy todir="${copy.dir}">
			<fileset dir="${base.dir}"
			includes="**/*.png,**/*.jar, **/*.evn, **/*.hdf" />
		</copy>    		
        <copy todir="${build.dir}" flatten="true" >
            <fileset dir = "${copy.dir}"
                includes="README.md,LICENSE,*.html,help/config/*.ini" >
            </fileset>
        </copy>
        <copy todir="${build.dir}" flatten="true" >
            <fileset dir = "${copy.dir}"
                includes="README.md,LICENSE,*.html,help/config/*.ini" >
            </fileset>
        </copy>
    </target>    

	<target name="srczip" depends="copy">
        <zip zipfile="${fullsrc.zip}"
            basedir="${copy.dir}"
            includes="jam\**\*.java,jam\**\*.png,jam\**\*.gif,README.md,LICENSE,jam/**/*.html,help\**\*,sampledata\**\*,test\**\*,injection\**\*"
        />    
    </target>	

   	<target name="x-platform" depends="jar,srczip" description="Create and populate x-platform release folder.">
   		<copy todir="${release.dir}">
    	 	<fileset dir="${build.dir}" includes="${jam.jar}" />
    	 	<fileset dir="${build.dir}" includes="${src.zip}" />
    	 	<fileset dir="${copy.dir}" includes="jh.jar" />
    	 	<fileset dir="${copy.dir}" includes="guice-3.0.jar" />
    	 	<fileset dir="${copy.dir}" includes="aopalliance.jar" />
    		<fileset dir="${copy.dir}" includes="javax.inject.jar" />
   		</copy>
  		<copy todir="${release.dir}">
  			<fileset dir="${base.dir}/launch" includes="jam.*" />
            <filterset>
    			<filter token="jam.jar" value="${jam.jar}" />
    			<filter token="java.latest" value="${java.latest}" />
           	</filterset>
  		</copy>
  		<copy todir="${release.dir}">
  			<fileset dir="${base.dir}" includes="README.md,LICENSE" />
  		</copy>
        <zip 
        	zipfile="${release.dir}/${jam.zip}" 
        	basedir="${release.dir}" 
        	includes="*.jar,jam.*,README.md,LICENSE"
        />    
 	</target>
 
    <target name="all" depends="unittest" />
        
</project>
